name: CI

on:
  pull_request:
    branches:
      - "*.x"
  push:
    branches:
      - "*.x"

jobs:
  phpunit:
    name: "PHPUnit"
    runs-on: "ubuntu-20.04"

    strategy:
      matrix:
        include:
          - php-version: 7.3
            symfony-require: "^3.4"
          - php-version: 7.3
            symfony-require: "^4.0"
          - php-version: 7.3
            symfony-require: "^5.0"
          - php-version: 7.4
            symfony-require: "^3.4"
          - php-version: 7.4
            symfony-require: "^4.0"
          - php-version: 7.4
            symfony-require: "^5.0"
            coverage: yes
          - php-version: 8.0
            symfony-require: "^3.4"
          - php-version: 8.0
            symfony-require: "^4.0"
          - php-version: 8.0
            symfony-require: "^5.0"
          - php-version: 8.0
            symfony-require: "6.0.*@dev"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: "Install PHP with XDebug"
        uses: "shivammathur/setup-php@v2"
        if: "${{ matrix.coverage != '' }}"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "xdebug"
          tools: "composer:v2,flex"

      - name: "Install PHP without coverage"
        uses: "shivammathur/setup-php@v2"
        if: "${{ matrix.coverage == '' }}"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "none"
          tools: "composer:v2,flex"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-locked-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-locked-"

      - name: "Install dependencies with composer"
        env:
          SYMFONY_REQUIRE: "${{ matrix.symfony-require }}"
        run: |
          composer update --no-interaction --no-progress

      - name: "Run PHPUnit with coverage"
        if: "${{ matrix.coverage != '' }}"
        run: "bin/phpunit --coverage-text"

      - name: "Run PHPUnit"
        if: "${{ matrix.coverage == '' }}"
        run: "bin/phpunit"
